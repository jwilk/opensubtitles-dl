#!/usr/bin/env bash

# Copyright Â© 2018-2023 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

set -e -u

prog="${0##*/}"

usage()
{
    printf 'Usage: %s FILE URL\n' "$prog"
}

if [ $# -ge 1 ] && { [[ $1 = '-h' ]] || [[ $1 = '--help' ]]; }
then
    usage
    exit
fi

if [ $# -ne 2 ]
then
    usage >&2
    exit 1
fi

file="$1"
url="$2"

stat -- "$file" > /dev/null
target_srt="${file%.*}.srt"
[[ "$url" =~ /([0-9]+)/ ]] || {
    printf '%s: cannot parse URL: %s\n' "$prog" "$url" >&2
    exit 1
}
id=${BASH_REMATCH[1]}
dl_url="https://dl.opensubtitles.org/en/download/sub/$id"
tmpdir=$(mktemp -t -d opensubtitles-dl.XXXXXX)
user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0'
location=$(curl --silent --fail --show-error -L --max-redirs 0 --user-agent "$user_agent" --referer "$url" "$dl_url" -o "$tmpdir/subtitles.zip" --write-out '%{redirect_url}') || {
    printf '<%s>: ' "$dl_url" >&2
    case $location in
        */msg-dmca)
            printf 'access denied (DMCA)' >&2
            ;;
        */captcha2/*)
            printf 'too many requests (captcha)' >&2
            ;;
        '')
            printf 'download failed' >&2
            ;;
        *)
            printf 'unexpected redirect to <%s>' "$location" >&2
            ;;
    esac
    printf '\n' >&2
    exit 1
}
zipinfo=$(zipinfo -1 "$tmpdir/subtitles.zip")
while read -r line
do
    case $line in
        -*)
            continue;;
        *.txt|*.srt|*.ass|*.sub)
            source_srt=$line
            break;;
    esac
done <<< "$zipinfo"
if [ -z "${source_srt-}" ]
then
    printf '<%s>: subtitle file not found\n' >&2 "$dl_url"
    exit 1
fi
source_srt=${source_srt//[[]/[[]} # hey, Vim: ]]}
source_srt=${source_srt//[*]/[*]}
source_srt=${source_srt//[?]/[?]}
unzip -p "$tmpdir/subtitles.zip" "$source_srt" > "$target_srt"
rm -rf "$tmpdir"
printf '%s -> %s\n' "$dl_url" "$target_srt" >&2

# vim:ts=4 sts=4 sw=4 et
